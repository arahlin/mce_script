#!/usr/bin/python

USAGE="""
%prog flatfile dirfile

Converts MCE flatfile to a dirfile.  Extracts the raw
data (as int32) and channelizes it.  It also pulls out 'ramp_value' and 
supports row and col offsets. 
"""

from mce_data import MCEFile
from optparse import OptionParser
import numpy
import os

class formatFileWriter(file):
    casts = {
        'int32': 'S',
        'uint32': 'U',
        }
    def write_raw_field(self, name, dtype, spf):
        line = '%s RAW %s %i\n' % (name, self.casts[str(dtype)], spf)
        self.write(line)


o = OptionParser(usage=USAGE)
opts, args = o.parse_args()

# Validate options...
if len(args) != 2:
    o.error("Give source flatfile and destination dirfile.")

# Process
infile, outfile = args
infiles = [args[0]]
outfiles = [args[1]]

for ifile, ofile in zip(infiles, outfiles):
    m = MCEFile(ifile)
    d = m.Read(row_col=True, do_extract=False)
    if not os.path.exists(ofile):
        os.makedirs(ofile)
    fmt = formatFileWriter(ofile+'/format', 'w')
    rows, cols = d.channels

    # MCE 'readout_row/col_index' param may require extra care

    rowOffset = rows[0]
    colOffset = cols[0]

    print "row,col offset = ", (rowOffset,colOffset)


    for r in rows:
        for c in cols:
            name, data = 'tesdatar%02ic%02i' % (r,c), d.data[r - rowOffset,c - colOffset].astype('int32')
            fmt.write_raw_field(name, data.dtype, 1)
            data.tofile(file=open(ofile+'/'+name, 'w'))
            num_data = len(data)

    name = 'ramp_value'
    raw = m.Read(raw_frames=True)
    rampValues = raw[:,7].astype('int32')

    # Ramp values may be at slower rate if Rect Mode used for 
    # data.  This will expand ramp values appropriately

    repeat = num_data/len(rampValues)

    print "Expanding ramp values by factor of ", repeat

    rampExpanded = []
    for orig in rampValues:
    	for n in xrange(repeat):
            rampExpanded.append(orig)

    rampExpandedNP = numpy.asarray(rampExpanded).astype('int32')

    fmt.write_raw_field(name, rampExpandedNP.dtype, 1)
    rampExpandedNP.tofile(file=open(ofile+'/'+name, 'w'))
    del fmt
