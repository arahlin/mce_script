#!/bin/bash 
#
# Revision history:
# <date $Date: 2007/10/04 05:24:56 $>    - <initials $Author: preaction $>
# $Log: ramp_sa_fb,v $
# Revision 1.3  2007/10/04 05:24:56  preaction
# MA generates runfile with <par_ramp> block
#    when no bias is specified, no bias is applied!
#    the temp file is renamed
#
# Revision 1.13  2007/09/28 23:08:14  mce
# MA generates runfile now
#

#Functions, mostly to make for fewer file redirects

function runfile_loop_structure {
#   Variables of environment are inherited
#   par2 is the outer loop
    echo "<par_ramp>" 
    if [ $nested_loop -eq 0 ] ; then
	echo "  <loop_list> loop1"
	echo "    <par_list loop1> par1"
	echo "      <par_title loop1 par1> sa_fb"
	echo "      <par_step loop1 par1> 0 160 400"
    else
	echo "  <loop_list> loop1 loop2"
	echo "    <par_list loop1> par1 par2"
	echo "       <par_title loop1 par1> sa_bias"
	echo "       <par_step loop1 par1> $start_bias $bias_step $total_bias"
	echo "       <par_title loop1 par2> offset"
	echo "       <par_step loop1 par2> $start_bias $bias_step $total_bias"
	echo "    <par_list loop2> par1" 
	echo "       <par_title loop2 par1> sa_fb"
	echo "       <par_step loop2 par1> 0 160 400"
    fi
    echo "</par_ramp>"
    echo ""
}

#
# START OF MAIN ROUTINE
#

# this should set $MAS_DATA and $MAS_TEMP
source ~mce/mas_env.bash

if [ $# -lt 3 ]; then 
  echo "----------------" >&2
  echo "Usage: ramp_sa_fb datafile n d" >&2
  echo "where : datafile is the name of the datafile" >&2
  echo "        n        is the rc card number (1 to 4 or s for all)" >&2
  echo "        d        is 0 for sweeping sa_fb only and 1 for sweeping sa_fb and sa_bias/offset" >&2
  echo "Note that the file will be saved under the data directory." >&2
  echo "----------------" >&2
  exit 1
fi  

start_ctime=`date -u +%s`
tempfile=$MAS_TEMP/ramp_sa_fb.temp
script_name=$0

datafile=$1
runfile=$datafile.run
n=$2
nested_loop=$3

if [ $n == "s" ] ;then
  num_cols=`mce_param FLUX_FB_COLUMNS`
  col_index=0
else
  num_cols=8
  col_index=$(( $(( $n - 1 )) * 8))
fi
lastcol_index=$(( $col_index + 7))

if [ $nested_loop -eq 0 ] ; then
  total_bias=1 
  bias_step=0
else
  total_bias=25
  bias_step=1500
  start_bias=15000
fi

########################
# now create runfile
mce_status -f $MAS_DATA/$runfile
if [ $? -ne 0 ] ; then
  echo "FAILURE ($script_name: mce_status failed)" >&2
  exit 5
fi 

runfile_loop_structure >> $MAS_DATA/$runfile

total_frames=$(( $total_bias * 400 ))
frameacq_stamp $n $datafile $total_frames>>$MAS_DATA/$runfile
if [ "$?" != "0" ] ; then
  echo "FAILURE: ($script_name: frameacq_stamp failed)" >&2
  exit 5
fi
#########################

echo "Now running a sweep of sa_fb (0 to 400*160) for each of $total_bias bias value(s)"
#########################
# now create mcebatch file to run 
/bin/rm $tempfile

${MAS_SCRIPT}ramp_sa_fb_generate "$n" "$datafile" "$nested_loop" "$total_bias" "$bias_step" \
    "$start_bias" "$num_cols" >> $tempfile

half_ctime=`date -u +%s`
elapsed=$(( $half_ctime - $start_ctime))
echo "$0 file-write time: $elapsed s"

mce_cmd -q -f $tempfile
if [ $? -ne  0 ] ; then
  echo "FAILURE: ($script_name: mce_cmd failed)"
  exit 4
fi

end_ctime=`date -u +%s`
elapsed=$(( $end_ctime - $start_ctime))
echo "$0 elapsed time: $elapsed s"
