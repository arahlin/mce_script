#!/bin/bash
#
# Acquires 'fast' data, meaning full or partial frames at elevated
# frame_rates.

source $MAS_SCRIPT/mas_library.bash

if [ "$#" -lt "2" ]; then
    echo "Usage:   fast_acq  n_frames rc [ data_rate [ rows_reported ] ]"
    echo "  where rc is 1,2,3, or 4."
    exit 1
fi

nf=$1
rc=$2

# Acquisition should not exceed 20kHz
new_data_rate=1
new_rows_rep=1
if [ "$3" != "" ]; then
    new_data_rate=$3
fi

if [ "$4" != "" ]; then
    new_rows_rep=$4
fi

# Save current settings
num_rows_rep_in=`command_reply rb cc num_rows_reported`
data_rate_in=`command_reply rb cc data_rate`
use_dv_in=`command_reply rb cc use_dv`

mce_cmd -qx wb cc num_rows_reported $new_rows_rep
mce_cmd -qx wb cc data_rate $new_data_rate
mce_cmd -qx wb cc use_dv 0

data_rate=`command_reply rb cc data_rate`
num_rows=`command_reply rb cc num_rows`
row_len=`command_reply rb cc row_len`
ct=`print_ctime`

filename="fast_$ct"
mux_rate=$(( 50000000 / $num_rows / $row_len ))
echo "MCE internal frame rate (mux rate) is $mux_rate"
echo "Readout frame rate is $(( $mux_rate / $data_rate ))"
echo "Data will be in $MAS_DATA/$filename"
mce_run $filename $nf $rc

echo "Restoring original data_rate of $data_rate_in, and num_rows_reported of $num_rows_rep_in"
mce_cmd -qx wb cc data_rate $data_rate_in
mce_cmd -qx wb cc num_rows_reported $num_rows_rep_in
mce_cmd -qx wb cc use_dv $use_dv_in
