#!/bin/bash 

#initialise environment
if [ ! -x ${MAS_VAR:=/usr/mce/bin/mas_var} ]; then
  echo "Cannot find mas_var.  Set MAS_VAR to the full path to the mas_var binary." >&2
  exit 1
else
  eval $(${MAS_VAR} -s)
fi

source $MAS_SCRIPT/mas_library.bash

expt=$MAS_DATA/experiment.cfg

## Check for MCE wake-up state and perform any necessary additional
## initialization.
mce_check_init


# This first command prints the bias levels and also checks that MCE
# is responding
echo -n "Reading TES biases: "
command_reply rb tes bias
if [ "$?" != "0" ]; then
    echo "Aborting!"
    exit 1
fi

n_columns=`command_reply rb sa bias | wc -w`
n_tes_bias=`command_reply rb tes bias | wc -w`

rc_flags=( `mas_param -s $expt get hardware_rc` )

# 1 if mux11d, 0 if not
mux11d_hardware=`mas_param -s $expt get hardware_mux11d`
array_width=`mas_param -s $expt get array_width`

# Funny 'if' is so we can pipe output into mce_cmd. Don't issue mce
# commands inside this block!
if [ "x" == "x" ]; then

    repeat_string "0" 41 "wb ac on_bias"
    repeat_string "0" 41 "wb ac off_bias"
    echo "wb ac enbl_mux 1"

    # this conditional added for mux11d exception 
    if [ "${mux11d_hardware}" -ne "1" ]; then
	repeat_string "0" $n_columns "wb sq2 fb"
	repeat_string "0" $n_columns "wb sq2 bias"
    else
	# mux11d stuff
	repeat_string "0" $n_columns "wb sq1 bias"
	
	repeat_string "0" $n_columns "wb bc1 enbl_mux"
        repeat_string "0" $n_columns "wb bc2 enbl_mux"
        repeat_string "0" $n_columns "wb bc3 enbl_mux"
	for bc in 1 2 3; do
            for c in `seq 0 31`; do
		repeat_string "0" $array_width "wb bc${bc} fb_col$c"
	    done
        done
    fi
    
    repeat_string "0" $n_columns "wb sa fb"
    repeat_string "0" $n_columns "wb sa bias"
    repeat_string "0" $n_columns "wb sa offset"
    
    repeat_string "0" $n_tes_bias "wb tes bias"
    
    # Short wait and then turn off multi-plexing
    echo "sleep 200000"
    echo "wb ac enbl_mux 0"

    # Put ADC offset to zero or you can get MSB noise
    for rc in 1 2 3 4; do
	if [ "${rc_flags[$(( $rc - 1 ))]}" != "0" ]; then
	    for c in `seq 0 7`; do
		repeat_string "0" $array_width "wb rc$rc adc_offset$c"
	    done
	fi
    done
    
    # This sets sq1 feedback to constant; -8192 is 0 volts
    echo "wb rca servo_mode 0 0 0 0 0 0 0 0"
    echo "wb rca fb_const -8192 -8192 -8192 -8192 -8192 -8192 -8192 -8192"
    echo "wb rca flx_lp_init 1"
fi | mce_cmd -q

if [ "${PIPESTATUS[1]}" != "0" ]; then
    echo "FAILURE: mce_zero_bias failed!"
    echo $ERRPREF "mce_zero_bias batch file failed!" |$LOGGER
    exit 1
fi

echo -n "SA biases:  "
command_reply rb sa bias

# this conditional added for mux11d exception
if [ "${mux11d_hardware}" -ne "1" ]; then
    echo -n "SQ2 biases: "
    command_reply rb sq2 bias
else
    echo -n "SQ1 biases: "
    command_reply rb sq1 bias
fi

echo -n "TES biases: "
command_reply rb tes bias
