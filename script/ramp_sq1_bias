#!/bin/bash
#

# initialise environment
eval `${MAS_CONFIG:-/usr/mce/bin/mas_config} -s`

source $MAS_SCRIPT/mas_library.bash

if [ $# -lt 2 ]; then
	echo "Usage: ramp_sq1_bias datafile n on_bias"
	echo "where: datafile is the name of the file"
	echo "       n        is the rc number"
	echo "       on_bias  (optional) is the starting SQ1 bias for a bias sweep"
	exit 1
fi

start_ctime=`print_ctime`

datafile=$MAS_DATA/$1
rc=$2
n_col=8

case "$rc" in
    1 | 2 | 3 | 4)
        col_index=$(( $rc * 8 - 8 ))
        col_count=8
	;;

    s | S)
	col_index=0
	col_count=32
	;;

    *)
	echo "Invalid card specification '$rc' (must be one of 1,2,3,4 or s)"
	exit 1
esac
    
tempfile=$MAS_TEMP/`whoami`_ramp_sq1_bias.temp
runfile=$datafile.run

# Default sq1 bias
on_bias=0
ramp_bias=0

if [ $# -gt 2 ]; then
	on_bias=$3
	ramp_bias=1
fi

# TES bias ramp parameters (misleading called 'feedback')
expt=$($MAS_CONFIG --experiment-file)
feedback_start=`mas_param -s $expt get sq1_ramp_tes_bias_start`
feedback_step=`mas_param -s $expt get sq1_ramp_tes_bias_step`
feedback_count=`mas_param -s $expt get sq1_ramp_tes_bias_count`

n_frames=$feedback_count

if [ $ramp_bias -ne 0 ]; then
        echo "This mode not supported."
        exit 1

	echo "Sweeping both SQ1 feedback and SQ1 bias"

	#SQ1 bias ramp parameters
	bias_count=10
	bias_step=500
	bias_start=$on_bias
	
	n_frames=$(( $feedback_count * $bias_count ))
fi

[ -e $tempfile ] && /bin/rm $tempfile

# Create runfile

mce_status -f $runfile
if [ $? -ne 0 ]; then
  echo "FAILURE: ($script_name: mce_status failed)"
  exit 5
fi

echo "<par_ramp>"  >> $runfile
if [ $ramp_bias -eq 0 ]; then
  echo "  <loop_list> loop1" >> $runfile
  echo "    <par_list> loop1" >> $runfile
  echo "      <par_title loop1 par1> tes_bias" >> $runfile
  echo "      <par_step loop1 par1> $feedback_start $feedback_step $feedback_count" >> $runfile
else
  echo "  <loop_list> loop1 loop2" >> $runfile
  echo "    <par_list loop1> par1" >> $runfile
  echo "      <par_title loop1 par1> s1_bias" >> $runfile
  echo "      <par_step loop1 par1> $bias_start $bias_step $bias_count" >> $runfile
  echo "    <par_list loop2> par1" >> $runfile
  echo "      <par_title loop2 par1> s1_fb" >> $runfile
  echo "      <par_step loop2 par1> $feedback_start $feedback_step $feedback_count" >> $runfile
fi
echo "</par_ramp>" >> $runfile

frameacq_stamp $rc $datafile $n_frames >> $runfile
if [ $? -ne 0 ]; then
  echo "FAILURE: ($script_name: frameacq_stamp failed)"
  exit 6
fi

##########################

if [ $ramp_bias -ne 0 ]; then

    mce_ramp \
	-M "acq_config $datafile rc$rc" \
	-L $bias_count  -V $bias_start $bias_step \
	-P "wb sq1 bias" 41 \
	-L $feedback_count  -V $feedback_start $feedback_step \
	-P "wra sq1 fb_const $col_index" $col_count \
	-P "acq_go 1" 0 \
	-M "`repeat_string 0 $col_count \"wra sq1 fb_const $col_index"`" \
	-M "`repeat_string 0 41 \"wb sq1 bias\"`" \
	>> $tempfile
    
else
    
    mce_ramp \
	-M "acq_config $datafile rc$rc" \
	-L $feedback_count  -V $feedback_start $feedback_step \
	-P "wb tes bias" 3 \
	-P "acq_go 1" 0 \
	-M "`repeat_string '0' 3 \"wb tes bias\"`" \
	>> $tempfile

fi

mce_cmd -q -f $tempfile
if [ $? -ne 0 ]; then
  echo "FAILURE: ($script_name: mce_cmd failed)"
  exit 4
fi

echo "$0 elapsed time: " `print_elapsed $start_ctime`
