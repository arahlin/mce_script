#!/bin/bash

#initialise environment
if [ ! -x ${MAS_VAR:=/usr/mce/bin/mas_var} ]; then
  echo "Cannot find mas_var.  Set MAS_VAR to the full path to the mas_var binary." >&2
  exit 1
else
  eval $(${MAS_VAR} -s)
fi

source $MAS_SCRIPT/mas_library.bash

short="$1"
note="$3"

if [ "$1" = "" ]; then
    short="0"
fi

RC=",rcs=[$2]"

if [ "$2" == "" ] || [ "$2" == "s" ] || [ "$2" == "S" ] || [ "$2" == "all" ]; then
    RC=""
fi

AUTO_LOG=$MAS_DATA/auto_log.txt
LOGGER="tee -a $AUTO_LOG"

SCRNAME="auto_setup_squids_sh"
ERRPREF="ERROR : $SCRNAME :"

SCRIPTS=$MAS_SCRIPT
IDL_PRO=$MAS_IDL

SETUP_TARGET=99 #return value that indicates completion
#SETUP_IDL="auto_setup_squids,short=$short,/check_bias $RC"
SETUP_IDL="auto_setup_squids,short=$short $RC"

start_time=`date`
ctime=`print_ctime`

echo "START : $SCRNAME : $start_time" | $LOGGER
echo "INFO  : $SCRNAME : ctime=$ctime" | $LOGGER
echo "ARGS  : $SCRNAME : $@" | $LOGGER

# Set observer log variable
export MAS_LOGID="$note"

# Start auto_setup

PYTHON_TUNING=( `mas_param get python_tuning` )
if [ "${PYTHON_TUNING[0]}" == "1" ]; then
    NOTEARGS=
    [ "$note" != "" ] && NOTEARGS="--reg-note \"${note}\""
    auto_setup --shortness $short $NOTEARGS
    err=$?
    if [ "$err" != "0" ]; then
	echo $ERRPREF "'auto_setup' returned error! [$err]" | $LOGGER
	exit 1
    fi
else
    cd $IDL_PRO
    idl -quiet <<EOF	
${SETUP_IDL}
EOF
    err=$?
    if [ "$err" != "$SETUP_TARGET" ]; then
	echo $ERRPREF "'$SETUP_IDL' returned error! [$err]" | $LOGGER
	exit 1
    fi
fi


delta_ctime=`print_elapsed $ctime`
echo "STOP  : $SCRNAME : time elapsed = $delta_ctime" | $LOGGER
