#!/bin/bash
#
# Adapted from ramp_tes_bias for DAS
#

source $MAS_SCRIPT/mas_library.bash

if [ "$#" -lt "2" ]; then
  echo "----------------"
  echo "Usage: ramp_tes_bias datafile n [ bias_start bias_step bias_count bias_pause first_pause ] "
  echo "   datafile      is the name of the datafile"
  echo "   n             is the rc card number (1 to 4)"
  echo
  echo "   bias_start    is the first bias to apply"
  echo "   bias_step     is the change in bias in each step (you probably want a *negative* value here)"
  echo "   bias_count    is the total number of biases to apply"
  echo "   bias_pause    is the delay time (in seconds) between biases"
  echo "   first_pause   is the stabilization delay (in seconds) after applying the first bias"
  echo
  echo "At the end of the script, the biases are returned to the values they had when the script was called."
  echo "Note that the file will be saved under the data directory."
  echo "----------------"
  exit 1
fi

# Set default bias step and normalizing parameters
total_bias=300
bias_step=20
start_bias=0
first_pause=1
data_pause_us=1000    # step period in microseconds 

# Command line overrides
if [ "$#" -gt "2" ]; then
    start_bias=$3
    bias_step=$4
    total_bias=$5
    data_pause_us=`float_multiply 1000000.0 $6`
    first_pause=$7
fi

ct=`print_ctime`
dt=`cat /data/cryo/current_data_name`

data_root=$1
n=$2
datafile=$MAS_DATA/$data_root

runfile=$datafile.run
biasfile=$datafile.bias
logfile=$datafile.log

end_bias=`command_reply rb tes heater`

echo "Setting first bias and waiting $first_pause s; time between other points will be $data_pause_us us"
mce_cmd -qx wb tes heater $start_bias
sleep $first_pause

cat /data/cryo/last_squid_tune >> $runfile

#Generate .run file
mce_status >> $runfile

# Apply frameacq stamp
frameacq_stamp $n $datafile $total_bias >> $runfile
if [ "$?" != "0" ]; then
  echo "frameacq_stamp failed!"
  exit 1
fi

# Put temp(erature) block in runfile
temperature_block >> $runfile

# Remove existing biasfile
[ -e $biasfile ] && rm $biasfile

echo "<tes_bias>" >> $biasfile
echo "Acquiring heater-V curve into data file $datafile"

#touch /data/cryo/${dt}/$datafile
#ln /data/cryo/${dt}/$datafile /data/mce_ctimes/$datafile
#ln /data/cryo/${dt}/$runfile /data/mce_ctimes/$runfile
#ln /data/cryo/${dt}/$biasfile /data/mce_ctimes/$biasfile

for i in `seq 0 $(( $total_bias - 1 ))`; do
   bias=$(( $start_bias + $i * $bias_step ))
   mce_cmd -qx wb tes heater $bias
   echo -e \
       "acq_config $datafile rc$n\n" \
       "acq_go 1\n" \
       "sleep $data_pause_us" | \
       mce_cmd -q
   if [ "$?" != "0" ]; then
       exit 3
   fi
done

echo "Completed heater-V acquisition!"

echo "Setting biases to initial value of $end_bias"
mce_cmd -qx wb tes heater $end_bias

echo "IV run time: " `print_elapsed $ct` "s"
