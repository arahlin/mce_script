#!/bin/bash
#
# This is the script to take superfast noise data through the transition on BICEP2.
#
#
# JAB 20090715 noise_superfast_1tile original
# JAB 20091001 noise_superfast mod for BICEP2

source $MAS_SCRIPT/mas_library.bash

if [ "$#" -lt "1" ]; then
    echo "Usage:   noise_superfast dir"
    exit 1
fi

dir=$1
rc=2

# Don't fiddle with tes bias when using mce_reconfig in 'really_freeze_servo.py'
mas_param set tes_bias_do_reconfig 0
mce_make_config

#for tbias in 5300 5100 4900 4700 4500 4300 4100 3900 3700 3500
for (( tbias=5300; tbias>=3100; tbias=$tbias-100 ))
do

dir=$1'/bias'$tbias'/'
#taudir=$dir'/tau'
mkdir '/data/cryo/current_data/'$1/'bias'$tbias'/'
#mkdir $taudir

sleep 1
bias_tess $tbias
sleep 1

# c2r9**, c2r10**, c2r23**, c2r24**, c2r25**, c2r26**
# c1r9**, c1r10**, c1r23**, c1r24**, c1r25**, c1r26** 

#for row in 9 10 23 24 25 26 
for row in 11 12 27 28
do

for col in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
do

mce_reconfig
sleep 2
~/python/really_freeze_servo_1Tile.py -r $row --o
sleep 2

# take super-fast noise timestreams at 400kHz, sampling pixel of interest
#
filename=$dir'/superfast_row'$row'_col'$col
superfast_acq $col $row 100000 $filename
sleep 2
name='rawacq_row'$row'_col'$col
sleep 1
mce_raw_acq_1col $rc $col 65536 $name $dir

sleep 2
index=$((5+8*($rc-1)+$col))
extn=$dir'calib_row'$row'_col'$col
min=$((${fb_val[$index]}-10))
max=$((${fb_val[$index]}+10))
sleep 2
fb1const_sqrwave $min $max 1000
sleep 2
superfast_acq $col $row 3000 $extn
sleep 2

mce_cmd -x wb cc internal_cmd_mode 0
sleep 1
mce_reconfig
sleep 1
done
done
done