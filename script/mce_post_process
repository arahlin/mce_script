#!/usr/bin/env python

ARCHIVE="/data/archive"
CACHE="/data/archive_cache"

LOG="/data/archive_cache/log.txt"
LOGGER="tee -a %s"%LOG

SLIMPATH = "/usr/local/bin"

import subprocess, time, glob
import os, os.path, commands, sys, tempfile

def timestamp():
    """Convert current time (not date) to a string and return it."""
    return time.strftime("%H:%M:%S", time.localtime())

def move2dir(src, destDir):
    """Move a file src to a directory destDir"""
    # Careful!  Don't use shutil.move, b/c it actually copies
    commands.getoutput("mv %s %s" % (src, destDir))


# Log everything to a log file AND to stdout, using a pipe to "tee"
print
logger = subprocess.Popen(["tee","-a","%s"%LOG], stdin=subprocess.PIPE).stdin
sys.stdout = logger

print 75*"*","\n"
print "Starting at %s"% time.asctime()

# Compress all *_dat files only.  Tuning files aren't slimmed.

files = commands.getoutput("ls -tr %s/12*" % CACHE).split()
for f in files:

    if f.endswith("_dat"):
        # slim_mce will compress *_dat to *_dat.slm, and move the hard
        # link in /data/archive_cache/ to /data/archive
        print "%s Slimming %s"% (timestamp(), f)

        slimfile="%s.slm"%f

        cmd1="export PATH=${PATH}:%s; slim_mce --force %s 2>&1" % (SLIMPATH, f)
        stat,out = commands.getstatusoutput(cmd1)
        if stat==0 and os.path.exists(slimfile):
            print out

            # Decide whether to save raw or slim file based on whether
            # we can successfully unslim the slim file.
            fd, tmpPath = tempfile.mkstemp(suffix=".raw")
            cmd2="export PATH=${PATH}:%s; unslim --stdout --preserve %s > %s"%(
                SLIMPATH, slimfile,tmpPath)
            stat,out = commands.getstatusoutput(cmd2)
            os.remove(tmpPath)
            
            if stat == 0:
                print "%s Moving   %s to archive"% (timestamp(), slimfile)
                move2dir(slimfile, ARCHIVE)
            else:
                print out
                print "Failed to unslim!  Copying raw file to archive instead"
                move2dir(f, ARCHIVE)

        else:
            print out
            print "Slim failed; skipping %s and its runfile"%f

    else:
        # Other files just get moved
        move2dir(f, ARCHIVE)
        print "Moved %s to archive"%f


# Jump scanning
cmd = '/home/mce/bin/jump_scan -1 -2'
try:
    stat,out = commands.getstatusoutput(cmd)
    if stat != 0:
        print 'Jump scanning failed with error code %i' % stat
    else:
        print 'Jump scanning successful'
except:
    print 'Jump scanning failed with exception'


print "Done at %s" % time.asctime()
