#!/bin/bash

source $MAS_SCRIPT/mas_library.bash

if [ "$#" -lt "1" ]; then
    echo "Usage:   $0 <rc> [ <samples> <suffix> <prefix> <runfile_flag> ]"
    echo "  rc             is 1,2,3, or 4."
    echo "  samples        number of 50 MHz samples to take, per column (default is calculated"
    echo "                 from num_rows and row_len... number of frames is calc'd based on"
    echo "                 num_rows_reported)"
    echo "  suffix         will be appended to the filename"
    echo "  prefix         is a folder in \$MAS_DATA that already exists"
    echo "  runfile_flag   suppresses runfile creation when equal to \"no_runfile\""    
    exit 1
fi

rc=$1
n_samples=$2

if [ "$3" != "" ]; then
    suffix="_$3"
fi

if [ "$4" != "" ]; then
    prefix="$4"
fi

ct=`print_ctime`
filename=$MAS_DATA/${prefix}/${ct}_raw${suffix}
runfilename=${filename}.run

if [ "$5" == "no_runfile" ]; then
    do_runfile=0
else
    do_runfile=1
fi

rc_cmd=$rc
[ "$rc_cmd" == "s" ] && rc_cmd="a"

# Disable sync box
use_sync=`command_reply rb cc use_sync`
use_dv=`command_reply rb cc use_dv`
mce_cmd -qX "wb cc use_sync 0" -X "wb cc use_dv 0"

# Get frame structure
row_len=`command_reply rb cc row_len`
num_rows=`command_reply rb cc num_rows`
num_rows_rep=`command_reply rb cc num_rows_reported`

if [ "$n_samples" == "" ]; then
    # Attempt to acquire 2 full multiplexing frames
    n_samples=$(( $row_len * $num_rows * 2 ))
    # But don't exceed 8k samples per column
    [ $n_samples -gt 8192 ] && n_samples=8192
fi
# Round to nearest complete readout frame
n_frames=$(( ($n_samples + $num_rows_rep - 1) / $num_rows_rep ))

mce_cmd -q -X "wb cc ret_dat_s 1 1" -X "wb rc$rc_cmd data_mode 3"

if [ "$do_runfile" == "1" ]; then
    mce_status >> $runfilename
    frameacq_stamp $rc $filename $n_frames >> $runfilename
fi

echo "Acquiring raw data to $filename ..."
mce_cmd -q \
    -X "acq_config $filename rc$rc" \
    -X "wb rc$rc_cmd captr_raw 1" \
    -X "sleep 10000" \
    -X "acq_go $n_frames"

# Restore sync box settings
mce_cmd -q -X "wb cc use_sync $use_sync" -X "wb cc use_dv $use_dv"
