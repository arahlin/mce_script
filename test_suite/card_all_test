#!/usr/bin/python
import sys
import getopt
import time
import os 
import io

from sys import *
from os import *
from mce import *
from mce_data import *

##### Threshold setting for this test #####
fpga_temp_hi = 40
fpga_temp_lo = 20
card_temp_hi = 40
card_temp_lo = 20
###########################################

def Usage():
  print """Usage:
  %s [-c xx] [-n #] CARD_ID
where: 
  CARD_ID the serial number of the readout card to test.
  -c xx   an MCE card type: cc, ac, bc, rc default: rc
  -n RC   readout-card # (1 2 3 4) or bias-card # (1 2 3) default=1
  
  A file called CARD_ID_<ctime>_all_test will be created under $MAS_DATA.
""" % (sys.argv[0])
  sys.exit(2)

try:
  optlist, argv = getopt.getopt(sys.argv[1:], 'c:n:')
except getopt.GetoptError, err:
  print str(err)
  Usage()

if (len(argv) < 1):
  Usage()
card_snum = argv[0]
card_num  = 1
card_name = "rc"

for o,a in optlist:
  if o == '-n':
    card_num = int(a)
  if o == '-c':
    card_name = a

if card_name == "rc" or card_name == "bc":
  card = "%s%i"% (card_name, card_num)
else:
  card = card_name

mas_data_dir = environ["MAS_DATA"]
print "\nExecuting set_directory"
system("set_directory")

result_file = "%s%s_%i_all_test" % (mas_data_dir, card_snum, int(time.time()))

m=mce()

fw_rev = m.read(card, 'fw_rev')
card_id = m.read(card,'card_id')
slot_id = m.read(card,'slot_id')
card_type = m.read(card, 'card_type')
fpga_temp = m.read(card, 'fpga_temp')
card_temp = m.read(card, 'card_temp')
if card_type[0] / 256 > 0: 
  card_rev = chr(card_type[0]/256 + 64)
else:
  card_rev = 0

if card == "cc":
  print "****** Check to make sure the green LED on cc switched status and is working! ******"
else:
  print "****** Check to make sure the LEDs on the target card switched status! ****"
m.write(card, 'led', [7])


if fpga_temp[0] < fpga_temp_lo or fpga_temp[0] > fpga_temp_hi:
  ftemp_status = "FAIL!!!!!!!!"
else: 
  ftemp_status = "pass"

if card_temp[0] < card_temp_lo or card_temp[0] > card_temp_hi:
  ctemp_status = "FAIL!!!!!!!!"
else:
  ctemp_status = "pass"

print "Unit Under Test  : ", card
print "Serial Number    : ", card_snum 
print "Firmware Revision: ", hex(fw_rev[0])
print "card_id          : ", hex(card_id[0]) 
print "slot_id          : ", slot_id
print "Card Type        : ", card_type[0]%256
print "Card Reevision   : ", card_rev
print "fpga_temp        : ", fpga_temp[0], "C", ftemp_status
print "card_temp        : ", card_temp[0], "C", ctemp_status
print "results are in   : ", result_file

#f = io.open(result_file, 'w')
#s = str("Unit Under Test  : " +  str(card()
#f.write(s)
#f.write('Unit Under Test  : ' + str(card) )
#print >>f, "Unit Under Test  : ", card
#print >>myfile, "Serial Number    : ", card_snum 
#print >>myfile, "Firmware Revision: ", hex(fw_rev[0])
#print >>myfile, "card_id          : ", hex(card_id[0])
#print >>myfile, "slot_id          : ", slot_id
#print >>myfile, "card_type        : ", card_type
#print >>myfile, "fpga_temp        : ", fpga_temp[0], "C", ftemp_status
#print >>myfile, "card_temp        : ", card_temp[0], "C", ctemp_status
#myfile.close()
